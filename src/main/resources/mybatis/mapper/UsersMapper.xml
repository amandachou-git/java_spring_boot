<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.java_spring_boot.mybatis.mapper.UsersMapper">
    <resultMap id="ResultMap" type="com.example.java_spring_boot.dao.entity.UsersEntity">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="authority" property="authority" javaType="com.example.java_spring_boot.enums.UserAuthorityEnum" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="create_dt" property="createDt" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler" />
        <result column="last_modified_by" property="lastModifiedBy" jdbcType="VARCHAR" />
        <result column="last_modified_dt" property="lastModifiedDt" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler" />
    </resultMap>

    <sql id="ColumnList">
        id, email, password, authority, create_by, create_dt, last_modified_by, last_modified_dt
    </sql>

    <select id="findAll" resultMap="ResultMap" resultType="com.example.java_spring_boot.dao.entity.UsersEntity">
        SELECT <include refid="ColumnList" /> FROM users
    </select>

    <select id="findById" parameterType="java.lang.String" resultMap="ResultMap" resultType="com.example.java_spring_boot.dao.entity.UsersEntity">
        SELECT <include refid="ColumnList" /> FROM users WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.example.java_spring_boot.dao.entity.UsersEntity">
        INSERT INTO users (email, password, authority, create_by, create_dt)
        VALUES (#{email}, #{password}, #{authority}, #{createBy}, #{createDt})
    </insert>

    <update id="update" parameterType="com.example.java_spring_boot.dao.entity.UsersEntity">
        UPDATE users
        SET <if test="email != null">email = #{email},</if>
            <if test="email != null">password = #{password},</if>
            authority = #{authority},
            last_modified_by = #{lastModifiedBy},
            last_modified_dt = #{lastModifiedDt}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="String">
        DELETE FROM users WHERE id = #{id}
    </delete>

</mapper>